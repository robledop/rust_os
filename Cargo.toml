[package]
name = "rust_os"
version = "0.1.0"
edition = "2018"

[dependencies]
bootloader = "0.9"
volatile = "0.2.6"
spin = "0.5.2"
x86_64 = "0.14.2"
uart_16550 = "0.2.0"

[dependencies.lazy_static]
version = "1.0"
features = ["spin_no_std"]

[profile.dev]
# panic = "abort"
# panic-abort-tests = true
debug = true
opt-level = 0


[profile.release]
panic = "abort"


[package.metadata.bootimage]
# The cargo subcommand that will be used for building the kernel.
#
# For building using the `cargo-xbuild` crate, set this to `xbuild`.
build-command = ["build"]
# The command invoked with the created bootimage (the "{}" will be replaced
# with the path to the bootable disk image)
# Applies to `bootimage run` and `bootimage runner`

#qemu-system-i386 -S -gdb tcp::1234 -boot d -hda ./bin/disk.img -m 512 -daemonize -serial file:serial.log -display gtk,zoom-to-fit=on -d int -D qemu.log
# run-command = ["qemu-system-x86_64", "-S", "-gdb", "tcp::1234", "-drive", "format=raw,file={}", "-daemonize", "-serial", "file:serial.log", "-display", "gtk,zoom-to-fit=on", "-d", "int", "-D", "qemu.log"]

# Additional arguments passed to the run command for non-test executables
# Applies to `bootimage run` and `bootimage runner`
#run-args = ["-S", "-gdb", "tcp::1234", "-daemonize", "-serial", "file:serial.log", "-display", "gtk,zoom-to-fit=on", "-d", "int", "-D", "qemu.log"]
#run-args = ["-serial", "file:serial.log", "-display", "gtk,zoom-to-fit=on", "-d", "int", "-D", "qemu.log"]

# Additional arguments passed to the run command for test executables
# Applies to `bootimage runner`
test-args = ["-device", "isa-debug-exit,iobase=0xf4,iosize=0x04", "-serial", "stdio", "-display", "none"]
test-success-exit-code = 33         # (0x10 << 1) | 1

# An exit code that should be considered as success for test executables
# test-success-exit-code = {integer}

# The timeout for running a test through `bootimage test` or `bootimage runner` (in seconds)
test-timeout = 10 

# Whether the `-no-reboot` flag should be passed to test executables
test-no-reboot = true
